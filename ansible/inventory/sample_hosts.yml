all:
  vars:
    # SSH defaults
    ansible_user: ubuntu

    # Disable host key checking for simplicity
    # Consider managing known_hosts for better security
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

    # SSH private key file for authentication
    # Uses ed25519 key by default
    ansible_ssh_private_key_file: "{{ lookup('env', 'HOME') + '/.ssh/id_ed25519' }}"
    # Uncomment to use RSA key instead
    # ansible_ssh_private_key_file: "{{ lookup('env', 'HOME') + '/.ssh/id_rsa' }}"

  children:
    proxy_group1:
      hosts:
        reverseproxy1.example.com:
      vars:
        caddy_admin_email: "ergosteur@example.com"
        cloudflare_api_token: "cf_token_for_group1"
        caddy_sites:
          - domain: 
              - "blog.example.com"
              - "alt-blog.example.com"
            upstream: "blog-backend.homelab.arpa:8080"
            cache_static: true
            cache_ttl: "1h"

    proxy_group2:
      hosts:
        reverseproxy2.contoso.com:
      vars:
        caddy_admin_email: "ergosteur@contoso.com"
        cloudflare_api_token: "cf_token_for_group2"
        caddy_sites:
          - domain: "dashboard.homelab.arpa"
            # Instead of a single upstream, define a list of upstreams
            upstreams:
              - path: "/dash*"
                target: "dashboard-api.homelab.arpa:9000"
              - path: "/dash2*"
                target: "dashboard-api2.homelab.arpa:9001"
            # Define a default response for the root path
            default_response: "No backend configured for this path"
            default_status: 404
          - domain: "files.contoso.com"
            upstream: "files-backend.homelab.arpa:7000"
            cache_static: true
            cache_ttl: "6h"
            skip_upstream_cert_verify: true

